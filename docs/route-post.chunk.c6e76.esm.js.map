{"version":3,"sources":["webpack:///../node_modules/preact/compat/src/util.js","webpack:///../node_modules/preact/compat/src/PureComponent.js","webpack:///../node_modules/preact/compat/src/suspense.js","webpack:///../node_modules/preact/compat/src/suspense-list.js","webpack:///../node_modules/preact/compat/src/render.js","webpack:///../node_modules/preact/compat/src/index.js","webpack:///../node_modules/markdown-to-jsx/index.tsx","webpack:///../node_modules/preact/compat/src/forwardRef.js","webpack:///./routes/post/index.tsx"],"names":["S","n","t","e","C","r","w","this","props","L","__c","__H","__","forEach","__P","__k","map","P","__v","__e","insertBefore","__d","U","__u","__b","D","__a","M","u","o","Q","X","cancelBubble","nn","defaultPrevented","an","$$typeof","B","sn","f","apply","arguments","on","un","fn","RegExp","cn","_n","dn","gn","hn","vn","yn","pn","mn","ln","en","exec","i","_","Nn","HIGH","l","a","c","replace","match","p","length","indexOf","s","d","tn","m","g","v","key","h","start","$n","toLowerCase","zn","test","H","q","wn","k","trim","type","push","G","An","split","$","A","En","textAlign","Ln","Mn","In","On","Bn","endsWith","every","bn","some","trimEnd","Rn","decodeURIComponent","Tn","rn","jn","Cn","Dn","Fn","Pn","Gn","slice","call","filter","Boolean","join","Hn","shift","qn","prototype","isPureReactComponent","shouldComponentUpdate","state","R","__f","ref","Symbol","for","T","then","I","unmount","__R","__h","__O","setState","pop","forceUpdate","componentWillUnmount","render","document","createElement","fallback","children","V","delete","revealOrder","size","get","Map","reverse","set","componentDidUpdate","componentDidMount","Z","Y","isReactComponent","Object","defineProperty","configurable","writable","value","K","event","currentTarget","Promise","resolve","checked","persist","isPropagationStopped","isDefaultPrevented","nativeEvent","enumerable","class","vnode","multiple","Array","isArray","selected","defaultValue","className","__r","diffed","oninput","onchange","onChange","reduce","amp","apos","gt","lt","nbsp","quot","y","x","b","z","E","O","j","N","F","W","J","kn","xn","Sn","concat","Zn","MAX","MED","LOW","MIN","options","keys","overrides","forceInline","forceBlock","wrapper","forceWrapper","toUpperCase","slugify","namedCodesToUnicode","blockQuote","breakLine","breakThematic","codeBlock","codeFenced","codeInline","footnote","footnoteReference","href","gfmTask","readOnly","heading","id","headingSetext","htmlComment","image","alt","title","src","link","linkAngleBraceStyleDetector","linkBareUrlDetector","linkMailtoDetector","orderedList","unorderedList","newlineCoalescer","paragraph","refImage","refLink","table","style","tableSeparator","text","textBolded","textEmphasized","textEscaped","textMarked","textStrikethroughed","disableParsingRawHTML","htmlBlock","htmlSelfClosing","substring","sort","Un","Post","data","isLoading","usePrerenderData","content","Markdown"],"mappings":"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","file":"route-post.chunk.c6e76.esm.js","sourcesContent":["/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n","import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n","import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\t/** @type {ControlledTarget} */\n\tconst target = e.currentTarget;\n\tconst eventType = e.type;\n\tif (\n\t\t(eventType === 'input' || eventType === 'change') &&\n\t\ttarget._isControlled\n\t) {\n\t\t// Note: We can't just send the event to the afterEvent function because\n\t\t// some properties on the event (e.g. currentTarget) will be changed by the\n\t\t// time afterEvent is called. `currentTarget` will be `null` at that point.\n\t\t// The browser reuses event objects for event handlers and just modifies the\n\t\t// relevant properties before invoking the next handler. So whenever we call\n\t\t// afterEvent, if we were to inspect the original Event object, we would see\n\t\t// that the currentTarget is null. So instead we pass the event type and the\n\t\t// target to afterEvent.\n\t\tPromise.resolve().then(() => afterEvent(eventType, target));\n\t}\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\n/**\n * @typedef {EventTarget & {value: any; checked: any; _isControlled: boolean; _prevValue: any}} ControlledTarget\n * @param {string} eventType\n * @param {ControlledTarget} target\n */\nfunction afterEvent(eventType, target) {\n\tif (target.value != null) {\n\t\tPromise.resolve().then(() => (target.value = target._prevValue));\n\t}\n\tif (eventType === 'change' && target.checked != null) {\n\t\tPromise.resolve().then(() => (target.checked = target._prevValue));\n\t}\n}\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'ondoubleclick') {\n\t\t\ti = 'ondblclick';\n\t\t} else if (\n\t\t\tlowerCased === 'onchange' &&\n\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t!onChangeInputType(props.type)\n\t\t) {\n\t\t\tlowerCased = i = 'oninput';\n\t\t} else if (lowerCased === 'onfocus') {\n\t\t\ti = 'onfocusin';\n\t\t} else if (lowerCased === 'onblur') {\n\t\t\ti = 'onfocusout';\n\t\t} else if (ON_ANI.test(i)) {\n\t\t\ti = lowerCased;\n\t\t} else if (type.indexOf('-') === -1 && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst type = vnode.type;\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\tconst isControlled = dom && dom._isControlled;\n\n\tif (\n\t\tdom != null &&\n\t\t(type === 'input' || type === 'textarea' || type === 'select')\n\t) {\n\t\tif (isControlled === false) {\n\t\t} else if (\n\t\t\tisControlled ||\n\t\t\tprops.oninput ||\n\t\t\tprops.onchange ||\n\t\t\tprops.onChange\n\t\t) {\n\t\t\tif (props.value != null) {\n\t\t\t\tdom._isControlled = true;\n\t\t\t\tdom._prevValue = props.value;\n\t\t\t} else if (props.checked != null) {\n\t\t\t\tdom._isControlled = true;\n\t\t\t\tdom._prevValue = props.checked;\n\t\t\t} else {\n\t\t\t\tdom._isControlled = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n","import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { is } from './util';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (!is(_instance._value, getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n","/* @jsx h */\n/**\n * markdown-to-jsx is a fork of [simple-markdown v0.2.2](https://github.com/Khan/simple-markdown)\n * from Khan Academy. Thank you Khan devs for making such an awesome and extensible\n * parsing infra... without it, half of the optimizations here wouldn't be feasible. 🙏🏼\n */\nimport * as React from 'react'\n\nexport namespace MarkdownToJSX {\n  /**\n   * RequireAtLeastOne<{ ... }> <- only requires at least one key\n   */\n  type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<\n    T,\n    Exclude<keyof T, Keys>\n  > &\n    {\n      [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>\n    }[Keys]\n\n  export type CreateElement = typeof React.createElement\n\n  export type HTMLTags = keyof JSX.IntrinsicElements\n\n  export type State = {\n    _inAnchor?: boolean\n    _inline?: boolean\n    _inTable?: boolean\n    _key?: React.Key\n    _list?: boolean\n    _simple?: boolean\n  }\n\n  export type ParserResult = {\n    [key: string]: any\n    type?: string\n  }\n\n  export type NestedParser = (\n    input: string,\n    state?: MarkdownToJSX.State\n  ) => MarkdownToJSX.ParserResult\n\n  export type Parser<ParserOutput> = (\n    capture: RegExpMatchArray,\n    nestedParse: NestedParser,\n    state?: MarkdownToJSX.State\n  ) => ParserOutput\n\n  export type RuleOutput = (\n    ast: MarkdownToJSX.ParserResult,\n    state: MarkdownToJSX.State\n  ) => JSX.Element\n\n  export type Rule<ParserOutput = MarkdownToJSX.ParserResult> = {\n    _match: (\n      source: string,\n      state: MarkdownToJSX.State,\n      prevCapturedString?: string\n    ) => RegExpMatchArray\n    _order: Priority\n    _parse: MarkdownToJSX.Parser<ParserOutput>\n    _react?: (\n      node: ParserOutput,\n      output: RuleOutput,\n      state?: MarkdownToJSX.State\n    ) => React.ReactChild\n  }\n\n  export type Rules = {\n    [key: string]: Rule\n  }\n\n  export type Override =\n    | RequireAtLeastOne<{\n        component: React.ElementType\n        props: Object\n      }>\n    | React.ElementType\n\n  export type Overrides = {\n    [tag in HTMLTags]?: Override\n  } & {\n    [customComponent: string]: Override\n  }\n\n  export type Options = Partial<{\n    /**\n     * Ultimate control over the output of all rendered JSX.\n     */\n    createElement: (\n      tag: Parameters<CreateElement>[0],\n      props: JSX.IntrinsicAttributes,\n      ...children: React.ReactChild[]\n    ) => JSX.Element\n\n    /**\n     * Disable the compiler's best-effort transcription of provided raw HTML\n     * into JSX-equivalent. This is the functionality that prevents the need to\n     * use `dangerouslySetInnerHTML` in React.\n     */\n    disableParsingRawHTML: boolean\n\n    /**\n     * Forces the compiler to always output content with a block-level wrapper\n     * (`<p>` or any block-level syntax your markdown already contains.)\n     */\n    forceBlock: boolean\n\n    /**\n     * Forces the compiler to always output content with an inline wrapper (`<span>`)\n     */\n    forceInline: boolean\n\n    /**\n     * Supply additional HTML entity: unicode replacement mappings.\n     *\n     * Pass only the inner part of the entity as the key,\n     * e.g. `&le;` -> `{ \"le\": \"\\u2264\" }`\n     *\n     * By default\n     * the following entities are replaced with their unicode equivalents:\n     *\n     * ```\n     * &amp;\n     * &apos;\n     * &gt;\n     * &lt;\n     * &nbsp;\n     * &quot;\n     * ```\n     */\n    namedCodesToUnicode: {\n      [key: string]: string\n    }\n\n    /**\n     * Selectively control the output of particular HTML tags as they would be\n     * emitted by the compiler.\n     */\n    overrides: Overrides\n\n    /**\n     * Declare the type of the wrapper to be used when there are multiple\n     * children to render. Set to `null` to get an array of children back\n     * without any wrapper, or use `React.Fragment` to get a React element\n     * that won't show up in the DOM.\n     */\n    wrapper: React.ElementType | null\n\n    /**\n     * Forces the compiler to wrap results, even if there is only a single\n     * child or no children.\n     */\n    forceWrapper: boolean\n\n    /**\n     * Override normalization of non-URI-safe characters for use in generating\n     * HTML IDs for anchor linking purposes.\n     */\n    slugify: (source: string) => string\n  }>\n}\n\n/** TODO: Drop for React 16? */\nconst ATTRIBUTE_TO_JSX_PROP_MAP = [\n  'allowFullScreen',\n  'allowTransparency',\n  'autoComplete',\n  'autoFocus',\n  'autoPlay',\n  'cellPadding',\n  'cellSpacing',\n  'charSet',\n  'className',\n  'classId',\n  'colSpan',\n  'contentEditable',\n  'contextMenu',\n  'crossOrigin',\n  'encType',\n  'formAction',\n  'formEncType',\n  'formMethod',\n  'formNoValidate',\n  'formTarget',\n  'frameBorder',\n  'hrefLang',\n  'inputMode',\n  'keyParams',\n  'keyType',\n  'marginHeight',\n  'marginWidth',\n  'maxLength',\n  'mediaGroup',\n  'minLength',\n  'noValidate',\n  'radioGroup',\n  'readOnly',\n  'rowSpan',\n  'spellCheck',\n  'srcDoc',\n  'srcLang',\n  'srcSet',\n  'tabIndex',\n  'useMap',\n].reduce(\n  (obj, x) => {\n    obj[x.toLowerCase()] = x\n    return obj\n  },\n  { for: 'htmlFor' }\n)\n\nconst namedCodesToUnicode = {\n  amp: '\\u0026',\n  apos: '\\u0027',\n  gt: '\\u003e',\n  lt: '\\u003c',\n  nbsp: '\\u00a0',\n  quot: '\\u201c',\n} as const\n\nconst DO_NOT_PROCESS_HTML_ELEMENTS = ['style', 'script']\n\n/**\n * the attribute extractor regex looks for a valid attribute name,\n * followed by an equal sign (whitespace around the equal sign is allowed), followed\n * by one of the following:\n *\n * 1. a single quote-bounded string, e.g. 'foo'\n * 2. a double quote-bounded string, e.g. \"bar\"\n * 3. an interpolation, e.g. {something}\n *\n * JSX can be be interpolated into itself and is passed through the compiler using\n * the same options and setup as the current run.\n *\n * <Something children={<SomeOtherThing />} />\n *                      ==================\n *                              ↳ children: [<SomeOtherThing />]\n *\n * Otherwise, interpolations are handled as strings or simple booleans\n * unless HTML syntax is detected.\n *\n * <Something color={green} disabled={true} />\n *                   =====            ====\n *                     ↓                ↳ disabled: true\n *                     ↳ color: \"green\"\n *\n * Numbers are not parsed at this time due to complexities around int, float,\n * and the upcoming bigint functionality that would make handling it unwieldy.\n * Parse the string in your component as desired.\n *\n * <Something someBigNumber={123456789123456789} />\n *                           ==================\n *                                   ↳ someBigNumber: \"123456789123456789\"\n */\nconst ATTR_EXTRACTOR_R =\n  /([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi\n\n/** TODO: Write explainers for each of these */\n\nconst AUTOLINK_MAILTO_CHECK_R = /mailto:/i\nconst BLOCK_END_R = /\\n{2,}$/\nconst BLOCKQUOTE_R = /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/\nconst BLOCKQUOTE_TRIM_LEFT_MULTILINE_R = /^ *> ?/gm\nconst BREAK_LINE_R = /^ {2,}\\n/\nconst BREAK_THEMATIC_R = /^(?:( *[-*_])){3,} *(?:\\n *)+\\n/\nconst CODE_BLOCK_FENCED_R =\n  /^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/\nconst CODE_BLOCK_R = /^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/\nconst CODE_INLINE_R = /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/\nconst CONSECUTIVE_NEWLINE_R = /^(?:\\n *)*\\n/\nconst CR_NEWLINE_R = /\\r\\n?/g\nconst FOOTNOTE_R = /^\\[\\^([^\\]]+)](:.*)\\n/\nconst FOOTNOTE_REFERENCE_R = /^\\[\\^([^\\]]+)]/\nconst FORMFEED_R = /\\f/g\nconst GFM_TASK_R = /^\\s*?\\[(x|\\s)\\]/\nconst HEADING_R = /^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/\nconst HEADING_SETEXT_R = /^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/\n\n/**\n * Explanation:\n *\n * 1. Look for a starting tag, preceded by any amount of spaces\n *    ^ *<\n *\n * 2. Capture the tag name (capture 1)\n *    ([^ >/]+)\n *\n * 3. Ignore a space after the starting tag and capture the attribute portion of the tag (capture 2)\n *     ?([^>]*)\\/{0}>\n *\n * 4. Ensure a matching closing tag is present in the rest of the input string\n *    (?=[\\s\\S]*<\\/\\1>)\n *\n * 5. Capture everything until the matching closing tag -- this might include additional pairs\n *    of the same tag type found in step 2 (capture 3)\n *    ((?:[\\s\\S]*?(?:<\\1[^>]*>[\\s\\S]*?<\\/\\1>)*[\\s\\S]*?)*?)<\\/\\1>\n *\n * 6. Capture excess newlines afterward\n *    \\n*\n */\nconst HTML_BLOCK_ELEMENT_R =\n  /^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i\n\nconst HTML_CHAR_CODE_R = /&([a-zA-Z]+);/g\n\nconst HTML_COMMENT_R = /^<!--[\\s\\S]*?(?:-->)/\n\n/**\n * borrowed from React 15(https://github.com/facebook/react/blob/894d20744cba99383ffd847dbd5b6e0800355a5c/src/renderers/dom/shared/HTMLDOMPropertyConfig.js)\n */\nconst HTML_CUSTOM_ATTR_R = /^(data|aria|x)-[a-z_][a-z\\d_.-]*$/\n\nconst HTML_SELF_CLOSING_ELEMENT_R =\n  /^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i\nconst INTERPOLATION_R = /^\\{.*\\}$/\nconst LINK_AUTOLINK_BARE_URL_R = /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/\nconst LINK_AUTOLINK_MAILTO_R = /^<([^ >]+@[^ >]+)>/\nconst LINK_AUTOLINK_R = /^<([^ >]+:\\/[^ >]+)>/\nconst CAPTURE_LETTER_AFTER_HYPHEN = /-([a-z])?/gi\nconst NP_TABLE_R = /^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/\nconst PARAGRAPH_R = /^[^\\n]+(?:  \\n|\\n{2,})/\nconst REFERENCE_IMAGE_OR_LINK = /^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/\nconst REFERENCE_IMAGE_R = /^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst REFERENCE_LINK_R = /^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst SQUARE_BRACKETS_R = /(\\[|\\])/g\nconst SHOULD_RENDER_AS_BLOCK_R = /(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/\nconst TAB_R = /\\t/g\nconst TABLE_SEPARATOR_R = /^ *\\| */\nconst TABLE_TRIM_PIPES = /(^ *\\||\\| *$)/g\nconst TABLE_CELL_END_TRIM = / *$/\nconst TABLE_CENTER_ALIGN = /^ *:-+: *$/\nconst TABLE_LEFT_ALIGN = /^ *:-+ *$/\nconst TABLE_RIGHT_ALIGN = /^ *-+: *$/\n\nconst TEXT_BOLD_R =\n  /^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/\nconst TEXT_EMPHASIZED_R =\n  /^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/\nconst TEXT_MARKED_R = /^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/\nconst TEXT_STRIKETHROUGHED_R = /^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/\n\nconst TEXT_ESCAPED_R = /^\\\\([^0-9A-Za-z\\s])/\nconst TEXT_PLAIN_R =\n  /^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i\n\nconst TRIM_STARTING_NEWLINES = /^\\n+/\n\nconst HTML_LEFT_TRIM_AMOUNT_R = /^([ \\t]*)/\n\nconst UNESCAPE_URL_R = /\\\\([^\\\\])/g\n\ntype LIST_TYPE = 1 | 2\nconst ORDERED: LIST_TYPE = 1\nconst UNORDERED: LIST_TYPE = 2\n\nconst LIST_ITEM_END_R = / *\\n+$/\nconst LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/\n\n// recognize a `*` `-`, `+`, `1.`, `2.`... list bullet\nconst ORDERED_LIST_BULLET = '(?:\\\\d+\\\\.)'\nconst UNORDERED_LIST_BULLET = '(?:[*+-])'\n\nfunction generateListItemPrefix(type: LIST_TYPE) {\n  return (\n    '( *)(' +\n    (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n    ') +'\n  )\n}\n\n// recognize the start of a list item:\n// leading space plus a bullet plus a space (`   * `)\nconst ORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(UNORDERED)\n\nfunction generateListItemPrefixRegex(type: LIST_TYPE) {\n  return new RegExp(\n    '^' +\n      (type === ORDERED ? ORDERED_LIST_ITEM_PREFIX : UNORDERED_LIST_ITEM_PREFIX)\n  )\n}\n\nconst ORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(UNORDERED)\n\nfunction generateListItemRegex(type: LIST_TYPE) {\n  // recognize an individual list item:\n  //  * hi\n  //    this is part of the same item\n  //\n  //    as is this, which is a new paragraph in the same item\n  //\n  //  * but this is not part of the same item\n  return new RegExp(\n    '^' +\n      (type === ORDERED\n        ? ORDERED_LIST_ITEM_PREFIX\n        : UNORDERED_LIST_ITEM_PREFIX) +\n      '[^\\\\n]*(?:\\\\n' +\n      '(?!\\\\1' +\n      (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n      ' )[^\\\\n]*)*(\\\\n|$)',\n    'gm'\n  )\n}\n\nconst ORDERED_LIST_ITEM_R = generateListItemRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_R = generateListItemRegex(UNORDERED)\n\n// check whether a list item has paragraphs: if it does,\n// we leave the newlines at the end\nfunction generateListRegex(type: LIST_TYPE) {\n  const bullet = type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET\n\n  return new RegExp(\n    '^( *)(' +\n      bullet +\n      ') ' +\n      '[\\\\s\\\\S]+?(?:\\\\n{2,}(?! )' +\n      '(?!\\\\1' +\n      bullet +\n      ' (?!' +\n      bullet +\n      ' ))\\\\n*' +\n      // the \\\\s*$ here is so that we can parse the inside of nested\n      // lists, where our content might end before we receive two `\\n`s\n      '|\\\\s*\\\\n*$)'\n  )\n}\n\nconst ORDERED_LIST_R = generateListRegex(ORDERED)\nconst UNORDERED_LIST_R = generateListRegex(UNORDERED)\n\nfunction generateListRule(h: any, type: LIST_TYPE) {\n  const ordered = type === ORDERED\n  const LIST_R = ordered ? ORDERED_LIST_R : UNORDERED_LIST_R\n  const LIST_ITEM_R = ordered ? ORDERED_LIST_ITEM_R : UNORDERED_LIST_ITEM_R\n  const LIST_ITEM_PREFIX_R = ordered\n    ? ORDERED_LIST_ITEM_PREFIX_R\n    : UNORDERED_LIST_ITEM_PREFIX_R\n\n  return {\n    _match(source, state, prevCapture) {\n      // We only want to break into a list if we are at the start of a\n      // line. This is to avoid parsing \"hi * there\" with \"* there\"\n      // becoming a part of a list.\n      // You might wonder, \"but that's inline, so of course it wouldn't\n      // start a list?\". You would be correct! Except that some of our\n      // lists can be inline, because they might be inside another list,\n      // in which case we can parse with inline scope, but need to allow\n      // nested lists inside this inline scope.\n      const isStartOfLine = LIST_LOOKBEHIND_R.exec(prevCapture)\n      const isListBlock = state._list || (!state._inline && !state._simple)\n\n      if (isStartOfLine && isListBlock) {\n        source = isStartOfLine[1] + source\n\n        return LIST_R.exec(source)\n      } else {\n        return null\n      }\n    },\n    _order: Priority.HIGH,\n    _parse(capture, parse, state) {\n      const bullet = capture[2]\n      const start = ordered ? +bullet : undefined\n      const items = capture[0]\n        // recognize the end of a paragraph block inside a list item:\n        // two or more newlines at end end of the item\n        .replace(BLOCK_END_R, '\\n')\n        .match(LIST_ITEM_R)\n\n      let lastItemWasAParagraph = false\n      const itemContent = items.map(function (item, i) {\n        // We need to see how far indented the item is:\n        const space = LIST_ITEM_PREFIX_R.exec(item)[0].length\n\n        // And then we construct a regex to \"unindent\" the subsequent\n        // lines of the items by that amount:\n        const spaceRegex = new RegExp('^ {1,' + space + '}', 'gm')\n\n        // Before processing the item, we need a couple things\n        const content = item\n          // remove indents on trailing lines:\n          .replace(spaceRegex, '')\n          // remove the bullet:\n          .replace(LIST_ITEM_PREFIX_R, '')\n\n        // Handling \"loose\" lists, like:\n        //\n        //  * this is wrapped in a paragraph\n        //\n        //  * as is this\n        //\n        //  * as is this\n        const isLastItem = i === items.length - 1\n        const containsBlocks = content.indexOf('\\n\\n') !== -1\n\n        // Any element in a list is a block if it contains multiple\n        // newlines. The last element in the list can also be a block\n        // if the previous item in the list was a block (this is\n        // because non-last items in the list can end with \\n\\n, but\n        // the last item can't, so we just \"inherit\" this property\n        // from our previous element).\n        const thisItemIsAParagraph =\n          containsBlocks || (isLastItem && lastItemWasAParagraph)\n        lastItemWasAParagraph = thisItemIsAParagraph\n\n        // backup our state for restoration afterwards. We're going to\n        // want to set state._list to true, and state._inline depending\n        // on our list's looseness.\n        const oldStateInline = state._inline\n        const oldStateList = state._list\n        state._list = true\n\n        // Parse inline if we're in a tight list, or block if we're in\n        // a loose list.\n        let adjustedContent\n        if (thisItemIsAParagraph) {\n          state._inline = false\n          adjustedContent = content.replace(LIST_ITEM_END_R, '\\n\\n')\n        } else {\n          state._inline = true\n          adjustedContent = content.replace(LIST_ITEM_END_R, '')\n        }\n\n        const result = parse(adjustedContent, state)\n\n        // Restore our state before returning\n        state._inline = oldStateInline\n        state._list = oldStateList\n\n        return result\n      })\n\n      return {\n        _items: itemContent,\n        _ordered: ordered,\n        _start: start,\n      }\n    },\n    _react(node, output, state) {\n      const Tag = node._ordered ? 'ol' : 'ul'\n\n      return (\n        <Tag key={state._key} start={node._start}>\n          {node._items.map(function generateListItem(item, i) {\n            return <li key={i}>{output(item, state)}</li>\n          })}\n        </Tag>\n      )\n    },\n  } as MarkdownToJSX.Rule<{\n    _items: MarkdownToJSX.ParserResult[]\n    _ordered: boolean\n    _start?: number\n  }>\n}\n\nconst LINK_R = /^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/\nconst IMAGE_R = /^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/\n\nconst NON_PARAGRAPH_BLOCK_SYNTAXES = [\n  BLOCKQUOTE_R,\n  CODE_BLOCK_FENCED_R,\n  CODE_BLOCK_R,\n  HEADING_R,\n  HEADING_SETEXT_R,\n  HTML_COMMENT_R,\n  NP_TABLE_R,\n  ORDERED_LIST_ITEM_R,\n  ORDERED_LIST_R,\n  UNORDERED_LIST_ITEM_R,\n  UNORDERED_LIST_R,\n]\n\nconst BLOCK_SYNTAXES = [\n  ...NON_PARAGRAPH_BLOCK_SYNTAXES,\n  PARAGRAPH_R,\n  HTML_BLOCK_ELEMENT_R,\n  HTML_SELF_CLOSING_ELEMENT_R,\n]\n\nfunction containsBlockSyntax(input: string) {\n  return BLOCK_SYNTAXES.some(r => r.test(input))\n}\n\n/** Remove symmetrical leading and trailing quotes */\nfunction unquote(str: string) {\n  const first = str[0]\n  if (\n    (first === '\"' || first === \"'\") &&\n    str.length >= 2 &&\n    str[str.length - 1] === first\n  ) {\n    return str.slice(1, -1)\n  }\n  return str\n}\n\n// based on https://stackoverflow.com/a/18123682/1141611\n// not complete, but probably good enough\nfunction slugify(str: string) {\n  return str\n    .replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, 'a')\n    .replace(/[çÇ]/g, 'c')\n    .replace(/[ðÐ]/g, 'd')\n    .replace(/[ÈÉÊËéèêë]/g, 'e')\n    .replace(/[ÏïÎîÍíÌì]/g, 'i')\n    .replace(/[Ññ]/g, 'n')\n    .replace(/[øØœŒÕõÔôÓóÒò]/g, 'o')\n    .replace(/[ÜüÛûÚúÙù]/g, 'u')\n    .replace(/[ŸÿÝý]/g, 'y')\n    .replace(/[^a-z0-9- ]/gi, '')\n    .replace(/ /gi, '-')\n    .toLowerCase()\n}\n\nfunction parseTableAlignCapture(alignCapture: string) {\n  if (TABLE_RIGHT_ALIGN.test(alignCapture)) {\n    return 'right'\n  } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {\n    return 'center'\n  } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {\n    return 'left'\n  }\n\n  return null\n}\n\nfunction parseTableRow(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  const prevInTable = state._inTable\n  state._inTable = true\n  const tableRow = parse(source.trim(), state)\n  state._inTable = prevInTable\n\n  let cells = [[]]\n  tableRow.forEach(function (node, i) {\n    if (node.type === 'tableSeparator') {\n      // Filter out empty table separators at the start/end:\n      if (i !== 0 && i !== tableRow.length - 1) {\n        // Split the current row:\n        cells.push([])\n      }\n    } else {\n      if (\n        node.type === 'text' &&\n        (tableRow[i + 1] == null || tableRow[i + 1].type === 'tableSeparator')\n      ) {\n        node._content = node._content.replace(TABLE_CELL_END_TRIM, '')\n      }\n      cells[cells.length - 1].push(node)\n    }\n  })\n  return cells\n}\n\nfunction parseTableAlign(source: string /*, parse, state*/) {\n  const alignText = source.replace(TABLE_TRIM_PIPES, '').split('|')\n\n  return alignText.map(parseTableAlignCapture)\n}\n\nfunction parseTableCells(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  const rowsText = source.trim().split('\\n')\n\n  return rowsText.map(function (rowText) {\n    return parseTableRow(rowText, parse, state)\n  })\n}\n\nfunction parseTable(\n  capture: RegExpMatchArray,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  state._inline = true\n  const header = parseTableRow(capture[1], parse, state)\n  const align = parseTableAlign(capture[2])\n  const cells = parseTableCells(capture[3], parse, state)\n  state._inline = false\n\n  return {\n    _align: align,\n    _cells: cells,\n    _header: header,\n    type: 'table',\n  }\n}\n\nfunction getTableStyle(node, colIndex) {\n  return node._align[colIndex] == null\n    ? {}\n    : {\n        textAlign: node._align[colIndex],\n      }\n}\n\n/** TODO: remove for react 16 */\nfunction normalizeAttributeKey(key) {\n  const hyphenIndex = key.indexOf('-')\n\n  if (hyphenIndex !== -1 && key.match(HTML_CUSTOM_ATTR_R) === null) {\n    key = key.replace(CAPTURE_LETTER_AFTER_HYPHEN, function (_, letter) {\n      return letter.toUpperCase()\n    })\n  }\n\n  return key\n}\n\nfunction attributeValueToJSXPropValue(\n  key: keyof React.AllHTMLAttributes<Element>,\n  value: string\n): any {\n  if (key === 'style') {\n    return value.split(/;\\s?/).reduce(function (styles, kvPair) {\n      const key = kvPair.slice(0, kvPair.indexOf(':'))\n\n      // snake-case to camelCase\n      // also handles PascalCasing vendor prefixes\n      const camelCasedKey = key.replace(/(-[a-z])/g, substr =>\n        substr[1].toUpperCase()\n      )\n\n      // key.length + 1 to skip over the colon\n      styles[camelCasedKey] = kvPair.slice(key.length + 1).trim()\n\n      return styles\n    }, {})\n  } else if (key === 'href') {\n    return sanitizeUrl(value)\n  } else if (value.match(INTERPOLATION_R)) {\n    // return as a string and let the consumer decide what to do with it\n    value = value.slice(1, value.length - 1)\n  }\n\n  if (value === 'true') {\n    return true\n  } else if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n\nfunction normalizeWhitespace(source: string): string {\n  return source\n    .replace(CR_NEWLINE_R, '\\n')\n    .replace(FORMFEED_R, '')\n    .replace(TAB_R, '    ')\n}\n\n/**\n * Creates a parser for a given set of rules, with the precedence\n * specified as a list of rules.\n *\n * @rules: an object containing\n * rule type -> {match, order, parse} objects\n * (lower order is higher precedence)\n * (Note: `order` is added to defaultRules after creation so that\n *  the `order` of defaultRules in the source matches the `order`\n *  of defaultRules in terms of `order` fields.)\n *\n * @returns The resulting parse function, with the following parameters:\n *   @source: the input source string to be parsed\n *   @state: an optional object to be threaded through parse\n *     calls. Allows clients to add stateful operations to\n *     parsing, such as keeping track of how many levels deep\n *     some nesting is. For an example use-case, see passage-ref\n *     parsing in src/widgets/passage/passage-markdown.jsx\n */\nfunction parserFor(\n  rules: MarkdownToJSX.Rules\n): (\n  source: string,\n  state: MarkdownToJSX.State\n) => ReturnType<MarkdownToJSX.NestedParser> {\n  // Sorts rules in order of increasing order, then\n  // ascending rule name in case of ties.\n  let ruleList = Object.keys(rules)\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production') {\n    ruleList.forEach(function (type) {\n      let order = rules[type]._order\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        (typeof order !== 'number' || !isFinite(order))\n      ) {\n        console.warn(\n          'markdown-to-jsx: Invalid order for rule `' + type + '`: ' + order\n        )\n      }\n    })\n  }\n\n  ruleList.sort(function (typeA, typeB) {\n    let orderA = rules[typeA]._order\n    let orderB = rules[typeB]._order\n\n    // First sort based on increasing order\n    if (orderA !== orderB) {\n      return orderA - orderB\n\n      // Then based on increasing unicode lexicographic ordering\n    } else if (typeA < typeB) {\n      return -1\n    }\n\n    return 1\n  })\n\n  function nestedParse(\n    source: string,\n    state: MarkdownToJSX.State\n  ): MarkdownToJSX.ParserResult[] {\n    let result = []\n\n    // We store the previous capture so that match functions can\n    // use some limited amount of lookbehind. Lists use this to\n    // ensure they don't match arbitrary '- ' or '* ' in inline\n    // text (see the list rule for more information).\n    let prevCapture = ''\n    while (source) {\n      let i = 0\n      while (i < ruleList.length) {\n        const ruleType = ruleList[i]\n        const rule = rules[ruleType]\n        const capture = rule._match(source, state, prevCapture)\n\n        if (capture) {\n          const currCaptureString = capture[0]\n          source = source.substring(currCaptureString.length)\n          const parsed = rule._parse(capture, nestedParse, state)\n\n          // We also let rules override the default type of\n          // their parsed node if they would like to, so that\n          // there can be a single output function for all links,\n          // even if there are several rules to parse them.\n          if (parsed.type == null) {\n            parsed.type = ruleType\n          }\n\n          result.push(parsed)\n\n          prevCapture = currCaptureString\n          break\n        }\n\n        i++\n      }\n    }\n\n    return result\n  }\n\n  return function outerParse(source, state) {\n    return nestedParse(normalizeWhitespace(source), state)\n  }\n}\n\n// Creates a match function for an inline scoped or simple element from a regex\nfunction inlineRegex(regex: RegExp) {\n  return function match(source, state: MarkdownToJSX.State) {\n    if (state._inline) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  }\n}\n\n// basically any inline element except links\nfunction simpleInlineRegex(regex: RegExp) {\n  return function match(source: string, state: MarkdownToJSX.State) {\n    if (state._inline || state._simple) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  }\n}\n\n// Creates a match function for a block scoped element from a regex\nfunction blockRegex(regex: RegExp) {\n  return function match(source: string, state: MarkdownToJSX.State) {\n    if (state._inline || state._simple) {\n      return null\n    } else {\n      return regex.exec(source)\n    }\n  }\n}\n\n// Creates a match function from a regex, ignoring block/inline scope\nfunction anyScopeRegex(regex: RegExp) {\n  return function match(source: string /*, state*/) {\n    return regex.exec(source)\n  }\n}\n\nfunction matchParagraph(\n  source: string,\n  state: MarkdownToJSX.State,\n  prevCapturedString?: string\n) {\n  if (state._inline || state._simple) {\n    return null\n  }\n\n  if (prevCapturedString && !prevCapturedString.endsWith('\\n')) {\n    // don't match continuation of a line\n    return null\n  }\n\n  let match = ''\n\n  source.split('\\n').every(line => {\n    // bail out on first sign of non-paragraph block\n    if (NON_PARAGRAPH_BLOCK_SYNTAXES.some(regex => regex.test(line))) {\n      return false\n    }\n    match += line + '\\n'\n    return line.trim()\n  })\n\n  const captured = match.trimEnd()\n  if (captured == '') {\n    return null\n  }\n\n  return [match, captured]\n}\n\nfunction reactFor(outputFunc) {\n  return function nestedReactOutput(\n    ast: MarkdownToJSX.ParserResult | MarkdownToJSX.ParserResult[],\n    state: MarkdownToJSX.State = {}\n  ): React.ReactChild[] {\n    if (Array.isArray(ast)) {\n      const oldKey = state._key\n      const result = []\n\n      // map nestedOutput over the ast, except group any text\n      // nodes together into a single string output.\n      let lastWasString = false\n\n      for (let i = 0; i < ast.length; i++) {\n        state._key = i\n\n        const nodeOut = nestedReactOutput(ast[i], state)\n        const isString = typeof nodeOut === 'string'\n\n        if (isString && lastWasString) {\n          result[result.length - 1] += nodeOut\n        } else if (nodeOut !== null) {\n          result.push(nodeOut)\n        }\n\n        lastWasString = isString\n      }\n\n      state._key = oldKey\n\n      return result\n    }\n\n    return outputFunc(ast, nestedReactOutput, state)\n  }\n}\n\nfunction sanitizeUrl(url: string): string | null {\n  try {\n    const decoded = decodeURIComponent(url).replace(/[^A-Za-z0-9/:]/g, '')\n\n    if (decoded.match(/^\\s*(javascript|vbscript|data(?!:image)):/i)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          'Anchor URL contains an unsafe JavaScript/VBScript/data expression, it will not be rendered.',\n          decoded\n        )\n      }\n\n      return null\n    }\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        'Anchor URL could not be decoded due to malformed syntax or characters, it will not be rendered.',\n        url\n      )\n    }\n\n    // decodeURIComponent sometimes throws a URIError\n    // See `decodeURIComponent('a%AFc');`\n    // http://stackoverflow.com/questions/9064536/javascript-decodeuricomponent-malformed-uri-exception\n    return null\n  }\n\n  return url\n}\n\nfunction unescapeUrl(rawUrlString: string): string {\n  return rawUrlString.replace(UNESCAPE_URL_R, '$1')\n}\n\n/**\n * Everything inline, including links.\n */\nfunction parseInline(\n  parse: MarkdownToJSX.NestedParser,\n  content: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  const isCurrentlyInline = state._inline || false\n  const isCurrentlySimple = state._simple || false\n  state._inline = true\n  state._simple = true\n  const result = parse(content, state)\n  state._inline = isCurrentlyInline\n  state._simple = isCurrentlySimple\n  return result\n}\n\n/**\n * Anything inline that isn't a link.\n */\nfunction parseSimpleInline(\n  parse: MarkdownToJSX.NestedParser,\n  content: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  const isCurrentlyInline = state._inline || false\n  const isCurrentlySimple = state._simple || false\n  state._inline = false\n  state._simple = true\n  const result = parse(content, state)\n  state._inline = isCurrentlyInline\n  state._simple = isCurrentlySimple\n  return result\n}\n\nfunction parseBlock(\n  parse,\n  content,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  state._inline = false\n  return parse(content + '\\n\\n', state)\n}\n\nconst parseCaptureInline: MarkdownToJSX.Parser<\n  ReturnType<typeof parseInline>\n> = (capture, parse, state: MarkdownToJSX.State) => {\n  return {\n    _content: parseInline(parse, capture[1], state),\n  }\n}\n\nfunction captureNothing() {\n  return {}\n}\n\nfunction renderNothing() {\n  return null\n}\n\nfunction ruleOutput(rules: MarkdownToJSX.Rules) {\n  return function nestedRuleOutput(\n    ast: MarkdownToJSX.ParserResult,\n    outputFunc: MarkdownToJSX.RuleOutput,\n    state: MarkdownToJSX.State\n  ): React.ReactChild {\n    return rules[ast.type]._react(ast, outputFunc, state)\n  }\n}\n\nfunction cx(...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nfunction get(src: Object, path: string, fb?: any) {\n  let ptr = src\n  const frags = path.split('.')\n\n  while (frags.length) {\n    ptr = ptr[frags[0]]\n\n    if (ptr === undefined) break\n    else frags.shift()\n  }\n\n  return ptr || fb\n}\n\nfunction getTag(tag: string, overrides: MarkdownToJSX.Overrides) {\n  const override = get(overrides, tag)\n\n  if (!override) return tag\n\n  return typeof override === 'function' ||\n    (typeof override === 'object' && 'render' in override)\n    ? override\n    : get(overrides, `${tag}.component`, tag)\n}\n\nenum Priority {\n  /**\n   * anything that must scan the tree before everything else\n   */\n  MAX,\n  /**\n   * scans for block-level constructs\n   */\n  HIGH,\n  /**\n   * inline w/ more priority than other inline\n   */\n  MED,\n  /**\n   * inline elements\n   */\n  LOW,\n  /**\n   * bare text and stuff that is considered leftovers\n   */\n  MIN,\n}\n\nexport function compiler(\n  markdown: string,\n  options: MarkdownToJSX.Options = {}\n) {\n  options.overrides = options.overrides || {}\n  options.slugify = options.slugify || slugify\n  options.namedCodesToUnicode = options.namedCodesToUnicode\n    ? { ...namedCodesToUnicode, ...options.namedCodesToUnicode }\n    : namedCodesToUnicode\n\n  const createElementFn = options.createElement || React.createElement\n\n  // JSX custom pragma\n  // eslint-disable-next-line no-unused-vars\n  function h(\n    // locally we always will render a known string tag\n    tag: MarkdownToJSX.HTMLTags,\n    props: Parameters<MarkdownToJSX.CreateElement>[1] & {\n      className?: string\n      id?: string\n    },\n    ...children\n  ) {\n    const overrideProps = get(options.overrides, `${tag}.props`, {})\n\n    return createElementFn(\n      getTag(tag, options.overrides),\n      {\n        ...props,\n        ...overrideProps,\n        className: cx(props?.className, overrideProps.className) || undefined,\n      },\n      ...children\n    )\n  }\n\n  function compile(input: string): JSX.Element {\n    let _inline = false\n\n    if (options.forceInline) {\n      _inline = true\n    } else if (!options.forceBlock) {\n      /**\n       * should not contain any block-level markdown like newlines, lists, headings,\n       * thematic breaks, blockquotes, tables, etc\n       */\n      _inline = SHOULD_RENDER_AS_BLOCK_R.test(input) === false\n    }\n\n    const arr = emitter(\n      parser(\n        _inline\n          ? input\n          : `${input.trimEnd().replace(TRIM_STARTING_NEWLINES, '')}\\n\\n`,\n        {\n          _inline,\n        }\n      )\n    )\n\n    while (\n      typeof arr[arr.length - 1] === 'string' &&\n      !arr[arr.length - 1].trim()\n    ) {\n      arr.pop()\n    }\n\n    if (options.wrapper === null) {\n      return arr\n    }\n\n    const wrapper = options.wrapper || (_inline ? 'span' : 'div')\n    let jsx\n\n    if (arr.length > 1 || options.forceWrapper) {\n      jsx = arr\n    } else if (arr.length === 1) {\n      jsx = arr[0]\n\n      // TODO: remove this for React 16\n      if (typeof jsx === 'string') {\n        return <span key=\"outer\">{jsx}</span>\n      } else {\n        return jsx\n      }\n    } else {\n      // TODO: return null for React 16\n      jsx = null\n    }\n\n    return React.createElement(wrapper, { key: 'outer' }, jsx)\n  }\n\n  function attrStringToMap(str: string): JSX.IntrinsicAttributes {\n    const attributes = str.match(ATTR_EXTRACTOR_R)\n    if (!attributes) {\n      return null\n    }\n\n    return attributes.reduce(function (map, raw, index) {\n      const delimiterIdx = raw.indexOf('=')\n\n      if (delimiterIdx !== -1) {\n        const key = normalizeAttributeKey(raw.slice(0, delimiterIdx)).trim()\n        const value = unquote(raw.slice(delimiterIdx + 1).trim())\n\n        const mappedKey = ATTRIBUTE_TO_JSX_PROP_MAP[key] || key\n        const normalizedValue = (map[mappedKey] = attributeValueToJSXPropValue(\n          key,\n          value\n        ))\n\n        if (\n          typeof normalizedValue === 'string' &&\n          (HTML_BLOCK_ELEMENT_R.test(normalizedValue) ||\n            HTML_SELF_CLOSING_ELEMENT_R.test(normalizedValue))\n        ) {\n          map[mappedKey] = React.cloneElement(compile(normalizedValue.trim()), {\n            key: index,\n          })\n        }\n      } else if (raw !== 'style') {\n        map[ATTRIBUTE_TO_JSX_PROP_MAP[raw] || raw] = true\n      }\n\n      return map\n    }, {})\n  }\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof markdown !== 'string') {\n      throw new Error(`markdown-to-jsx: the first argument must be\n                             a string`)\n    }\n\n    if (\n      Object.prototype.toString.call(options.overrides) !== '[object Object]'\n    ) {\n      throw new Error(`markdown-to-jsx: options.overrides (second argument property) must be\n                             undefined or an object literal with shape:\n                             {\n                                htmltagname: {\n                                    component: string|ReactComponent(optional),\n                                    props: object(optional)\n                                }\n                             }`)\n    }\n  }\n\n  const footnotes: { _footnote: string; _identifier: string }[] = []\n  const refs: { [key: string]: { _target: string; _title: string } } = {}\n\n  /**\n   * each rule's react() output function goes through our custom h() JSX pragma;\n   * this allows the override functionality to be automatically applied\n   */\n  const rules: MarkdownToJSX.Rules = {\n    blockQuote: {\n      _match: blockRegex(BLOCKQUOTE_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        return {\n          _content: parse(\n            capture[0].replace(BLOCKQUOTE_TRIM_LEFT_MULTILINE_R, ''),\n            state\n          ),\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <blockquote key={state._key}>\n            {output(node._content, state)}\n          </blockquote>\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _content: MarkdownToJSX.ParserResult }>,\n\n    breakLine: {\n      _match: anyScopeRegex(BREAK_LINE_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _react(_, __, state) {\n        return <br key={state._key} />\n      },\n    },\n\n    breakThematic: {\n      _match: blockRegex(BREAK_THEMATIC_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _react(_, __, state) {\n        return <hr key={state._key} />\n      },\n    },\n\n    codeBlock: {\n      _match: blockRegex(CODE_BLOCK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[0].replace(/^ {4}/gm, '').replace(/\\n+$/, ''),\n          _lang: undefined,\n        }\n      },\n\n      _react(node, output, state) {\n        return (\n          <pre key={state._key}>\n            <code\n              {...node._attrs}\n              className={node._lang ? `lang-${node._lang}` : ''}\n            >\n              {node._content}\n            </code>\n          </pre>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs?: ReturnType<typeof attrStringToMap>\n      _content: string\n      _lang?: string\n    }>,\n\n    codeFenced: {\n      _match: blockRegex(CODE_BLOCK_FENCED_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          // if capture[3] it's additional metadata\n          _attrs: attrStringToMap(capture[3] || ''),\n          _content: capture[4],\n          _lang: capture[2] || undefined,\n          type: 'codeBlock',\n        }\n      },\n    },\n\n    codeInline: {\n      _match: simpleInlineRegex(CODE_INLINE_R),\n      _order: Priority.LOW,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return <code key={state._key}>{node._content}</code>\n      },\n    } as MarkdownToJSX.Rule<{ _content: string }>,\n\n    /**\n     * footnotes are emitted at the end of compilation in a special <footer> block\n     */\n    footnote: {\n      _match: blockRegex(FOOTNOTE_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        footnotes.push({\n          _footnote: capture[2],\n          _identifier: capture[1],\n        })\n\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    footnoteReference: {\n      _match: inlineRegex(FOOTNOTE_REFERENCE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse*/) {\n        return {\n          _content: capture[1],\n          _target: `#${options.slugify(capture[1])}`,\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <a key={state._key} href={sanitizeUrl(node._target)}>\n            <sup key={state._key}>{node._content}</sup>\n          </a>\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _content: string; _target: string }>,\n\n    gfmTask: {\n      _match: inlineRegex(GFM_TASK_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _completed: capture[1].toLowerCase() === 'x',\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <input\n            checked={node._completed}\n            key={state._key}\n            readOnly\n            type=\"checkbox\"\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _completed: boolean }>,\n\n    heading: {\n      _match: blockRegex(HEADING_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseInline(parse, capture[2], state),\n          _id: options.slugify(capture[2]),\n          _level: capture[1].length,\n        }\n      },\n      _react(node, output, state) {\n        return h(\n          `h${node._level}`,\n          { id: node._id, key: state._key },\n          output(node._content, state)\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _id: string\n      _level: 1 | 2 | 3 | 4 | 5 | 6\n      _tag: MarkdownToJSX.HTMLTags\n    }>,\n\n    headingSetext: {\n      _match: blockRegex(HEADING_SETEXT_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseInline(parse, capture[1], state),\n          _level: capture[2] === '=' ? 1 : 2,\n          type: 'heading',\n        }\n      },\n    },\n\n    htmlComment: {\n      _match: anyScopeRegex(HTML_COMMENT_R),\n      _order: Priority.HIGH,\n      _parse() {\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    image: {\n      _match: simpleInlineRegex(IMAGE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _alt: capture[1],\n          _target: unescapeUrl(capture[2]),\n          _title: capture[3],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <img\n            key={state._key}\n            alt={node._alt || undefined}\n            title={node._title || undefined}\n            src={sanitizeUrl(node._target)}\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _alt?: string\n      _target: string\n      _title?: string\n    }>,\n\n    link: {\n      _match: inlineRegex(LINK_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseSimpleInline(parse, capture[1], state),\n          _target: unescapeUrl(capture[2]),\n          _title: capture[3],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <a\n            key={state._key}\n            href={sanitizeUrl(node._target)}\n            title={node._title}\n          >\n            {output(node._content, state)}\n          </a>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _target: string\n      _title?: string\n    }>,\n\n    // https://daringfireball.net/projects/markdown/syntax#autolink\n    linkAngleBraceStyleDetector: {\n      _match: inlineRegex(LINK_AUTOLINK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: [\n            {\n              _content: capture[1],\n              type: 'text',\n            },\n          ],\n          _target: capture[1],\n          type: 'link',\n        }\n      },\n    },\n\n    linkBareUrlDetector: {\n      _match: (source, state) => {\n        if (state._inAnchor) {\n          return null\n        }\n        return inlineRegex(LINK_AUTOLINK_BARE_URL_R)(source, state)\n      },\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: [\n            {\n              _content: capture[1],\n              type: 'text',\n            },\n          ],\n          _target: capture[1],\n          _title: undefined,\n          type: 'link',\n        }\n      },\n    },\n\n    linkMailtoDetector: {\n      _match: inlineRegex(LINK_AUTOLINK_MAILTO_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        let address = capture[1]\n        let target = capture[1]\n\n        // Check for a `mailto:` already existing in the link:\n        if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {\n          target = 'mailto:' + target\n        }\n\n        return {\n          _content: [\n            {\n              _content: address.replace('mailto:', ''),\n              type: 'text',\n            },\n          ],\n          _target: target,\n          type: 'link',\n        }\n      },\n    },\n\n    orderedList: generateListRule(h, ORDERED),\n    unorderedList: generateListRule(h, UNORDERED),\n\n    newlineCoalescer: {\n      _match: blockRegex(CONSECUTIVE_NEWLINE_R),\n      _order: Priority.LOW,\n      _parse: captureNothing,\n      _react(/*node, output, state*/) {\n        return '\\n'\n      },\n    },\n\n    paragraph: {\n      _match: matchParagraph,\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <p key={state._key}>{output(node._content, state)}</p>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n\n    ref: {\n      _match: inlineRegex(REFERENCE_IMAGE_OR_LINK),\n      _order: Priority.MAX,\n      _parse(capture /*, parse*/) {\n        refs[capture[1]] = {\n          _target: capture[2],\n          _title: capture[4],\n        }\n\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    refImage: {\n      _match: simpleInlineRegex(REFERENCE_IMAGE_R),\n      _order: Priority.MAX,\n      _parse(capture) {\n        return {\n          _alt: capture[1] || undefined,\n          _ref: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <img\n            key={state._key}\n            alt={node._alt}\n            src={sanitizeUrl(refs[node._ref]._target)}\n            title={refs[node._ref]._title}\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _alt?: string; _ref: string }>,\n\n    refLink: {\n      _match: inlineRegex(REFERENCE_LINK_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          _content: parse(capture[1], state),\n          _fallbackContent: parse(\n            capture[0].replace(SQUARE_BRACKETS_R, '\\\\$1'),\n            state\n          ),\n          _ref: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return refs[node._ref] ? (\n          <a\n            key={state._key}\n            href={sanitizeUrl(refs[node._ref]._target)}\n            title={refs[node._ref]._title}\n          >\n            {output(node._content, state)}\n          </a>\n        ) : (\n          <span key={state._key}>{output(node._fallbackContent, state)}</span>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _fallbackContent: MarkdownToJSX.ParserResult\n      _ref: string\n    }>,\n\n    table: {\n      _match: blockRegex(NP_TABLE_R),\n      _order: Priority.HIGH,\n      _parse: parseTable,\n      _react(node, output, state) {\n        return (\n          <table key={state._key}>\n            <thead>\n              <tr>\n                {node._header.map(function generateHeaderCell(content, i) {\n                  return (\n                    <th key={i} style={getTableStyle(node, i)}>\n                      {output(content, state)}\n                    </th>\n                  )\n                })}\n              </tr>\n            </thead>\n\n            <tbody>\n              {node._cells.map(function generateTableRow(row, i) {\n                return (\n                  <tr key={i}>\n                    {row.map(function generateTableCell(content, c) {\n                      return (\n                        <td key={c} style={getTableStyle(node, c)}>\n                          {output(content, state)}\n                        </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        )\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseTable>>,\n\n    tableSeparator: {\n      _match: function (source, state) {\n        if (!state._inTable) {\n          return null\n        }\n        return TABLE_SEPARATOR_R.exec(source)\n      },\n      _order: Priority.HIGH,\n      _parse: function () {\n        return { type: 'tableSeparator' }\n      },\n      // These shouldn't be reached, but in case they are, be reasonable:\n      _react() {\n        return ' | '\n      },\n    },\n\n    text: {\n      // Here we look for anything followed by non-symbols,\n      // double newlines, or double-space-newlines\n      // We break on any symbol characters so that this grammar\n      // is easy to extend without needing to modify this regex\n      _match: anyScopeRegex(TEXT_PLAIN_R),\n      _order: Priority.MIN,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[0]\n            // nbsp -> unicode equivalent for named chars\n            .replace(HTML_CHAR_CODE_R, (full, inner) => {\n              return options.namedCodesToUnicode[inner]\n                ? options.namedCodesToUnicode[inner]\n                : full\n            }),\n        }\n      },\n      _react(node /*, output, state*/) {\n        return node._content\n      },\n    } as MarkdownToJSX.Rule<{ _content: string }>,\n\n    textBolded: {\n      _match: simpleInlineRegex(TEXT_BOLD_R),\n      _order: Priority.MED,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> the syntax control character\n          // capture[2] -> inner content\n          _content: parse(capture[2], state),\n        }\n      },\n      _react(node, output, state) {\n        return <strong key={state._key}>{output(node._content, state)}</strong>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<MarkdownToJSX.NestedParser>>,\n\n    textEmphasized: {\n      _match: simpleInlineRegex(TEXT_EMPHASIZED_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> opening * or _\n          // capture[2] -> inner content\n          _content: parse(capture[2], state),\n        }\n      },\n      _react(node, output, state) {\n        return <em key={state._key}>{output(node._content, state)}</em>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<MarkdownToJSX.NestedParser>>,\n\n    textEscaped: {\n      // We don't allow escaping numbers, letters, or spaces here so that\n      // backslashes used in plain text still get rendered. But allowing\n      // escaping anything else provides a very flexible escape mechanism,\n      // regardless of how this grammar is extended.\n      _match: simpleInlineRegex(TEXT_ESCAPED_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[1],\n          type: 'text',\n        }\n      },\n    },\n\n    textMarked: {\n      _match: simpleInlineRegex(TEXT_MARKED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <mark key={state._key}>{output(node._content, state)}</mark>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n\n    textStrikethroughed: {\n      _match: simpleInlineRegex(TEXT_STRIKETHROUGHED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <del key={state._key}>{output(node._content, state)}</del>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n  }\n\n  // Object.keys(rules).forEach(key => {\n  //   let { _match: match, _parse: parse } = rules[key]\n\n  //   rules[key]._match = (...args) => {\n  //     const start = performance.now()\n  //     const result = match(...args)\n  //     const delta = performance.now() - start\n\n  //     if (delta > 5)\n  //       console.warn(\n  //         `Slow match for ${key}: ${delta.toFixed(3)}ms, input: ${args[0]}`\n  //       )\n\n  //     return result\n  //   }\n\n  //   rules[key]._parse = (...args) => {\n  //     const start = performance.now()\n  //     const result = parse(...args)\n  //     const delta = performance.now() - start\n\n  //     if (delta > 5)\n  //       console.warn(`Slow parse for ${key}: ${delta.toFixed(3)}ms`)\n\n  //     console.log(`${key}:parse`, `${delta.toFixed(3)}ms`, args[0])\n\n  //     return result\n  //   }\n  // })\n\n  if (options.disableParsingRawHTML !== true) {\n    rules.htmlBlock = {\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_BLOCK_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        const [, whitespace] = capture[3].match(HTML_LEFT_TRIM_AMOUNT_R)\n        const trimmer = new RegExp(`^${whitespace}`, 'gm')\n        const trimmed = capture[3].replace(trimmer, '')\n\n        const parseFunc = containsBlockSyntax(trimmed)\n          ? parseBlock\n          : parseInline\n\n        const tagName = capture[1].toLowerCase() as MarkdownToJSX.HTMLTags\n        const noInnerParse =\n          DO_NOT_PROCESS_HTML_ELEMENTS.indexOf(tagName) !== -1\n\n        state._inAnchor = state._inAnchor || tagName === 'a'\n\n        /**\n         * if another html block is detected within, parse as block,\n         * otherwise parse as inline to pick up any further markdown\n         */\n        const content = noInnerParse\n          ? capture[3]\n          : parseFunc(parse, trimmed, state)\n\n        state._inAnchor = false\n\n        return {\n          _attrs: attrStringToMap(capture[2]),\n          _content: content,\n          _noInnerParse: noInnerParse,\n          _tag: noInnerParse ? tagName : capture[1],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          // @ts-ignore\n          <node._tag key={state._key} {...node._attrs}>\n            {node._noInnerParse\n              ? (node._content as string)\n              : output(node._content as MarkdownToJSX.ParserResult, state)}\n          </node._tag>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs: ReturnType<typeof attrStringToMap>\n      _content: string | ReturnType<MarkdownToJSX.NestedParser>\n      _noInnerParse: Boolean\n      _tag: string\n    }>\n\n    rules.htmlSelfClosing = {\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_SELF_CLOSING_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _attrs: attrStringToMap(capture[2] || ''),\n          _tag: capture[1],\n        }\n      },\n      _react(node, output, state) {\n        return <node._tag {...node._attrs} key={state._key} />\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs: ReturnType<typeof attrStringToMap>\n      _tag: string\n    }>\n  }\n\n  const parser = parserFor(rules)\n  const emitter: Function = reactFor(ruleOutput(rules))\n\n  const jsx = compile(markdown)\n\n  if (footnotes.length) {\n    return (\n      <div>\n        {jsx}\n        <footer key=\"footer\">\n          {footnotes.map(function createFootnote(def) {\n            return (\n              <div id={options.slugify(def._identifier)} key={def._identifier}>\n                {def._identifier}\n                {emitter(parser(def._footnote, { _inline: true }))}\n              </div>\n            )\n          })}\n        </footer>\n      </div>\n    )\n  }\n\n  return jsx\n}\n\n/**\n * A simple HOC for easy React use. Feed the markdown content as a direct child\n * and the rest is taken care of automatically.\n */\nconst Markdown: React.FC<{\n  [key: string]: any\n  children: string\n  options?: MarkdownToJSX.Options\n}> = ({ children, options, ...props }) => {\n  return React.cloneElement(\n    compiler(children, options),\n    props as JSX.IntrinsicAttributes\n  )\n}\n\nexport default Markdown\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { h } from 'preact';\nimport { usePrerenderData } from '@preact/prerender-data-provider';\nimport Markdown from 'markdown-to-jsx';\n\nconst Post = (props) => {\n  const [data, isLoading] = usePrerenderData(props);\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (data && data.data) {\n    const { content } = data.data\n\t  return (\n     <Markdown>{ content }</Markdown>\n\t  )\n  }\n};\n\nexport default Post"],"sourceRoot":""}